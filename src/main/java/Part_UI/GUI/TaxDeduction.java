package Part_UI.GUI;

import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;

public class TaxDeduction extends JFrame {

    public TaxDeduction() {
        setTitle("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1100, 650);
        setLocationRelativeTo(null);
        getContentPane().setBackground(new Color(210, 230, 240)); // ‡∏ü‡πâ‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
        setLayout(new BorderLayout());

        // ===== ‡πÅ‡∏ñ‡∏ö‡∏ö‡∏ô: ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏ã‡πâ‡∏≤‡∏¢ + ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Å‡∏•‡∏≤‡∏á + ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤ =====
        JPanel topPanel = new JPanel(new BorderLayout());
        topPanel.setOpaque(false);

        JButton backButton = new JButton("‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö");
        backButton.setFont(new Font("Tahoma", Font.BOLD, 16));
        backButton.setBackground(new Color(200, 220, 210));
        backButton.setForeground(Color.BLACK);
        backButton.setFocusPainted(false);
        backButton.setBorder(new RoundedBorder(15));
        backButton.setCursor(new Cursor(Cursor.HAND_CURSOR));

        JPanel leftPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 15, 10));
        leftPanel.setOpaque(false);
        leftPanel.add(backButton);

        JLabel titleLabel = new JLabel("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ", SwingConstants.CENTER);
        titleLabel.setFont(new Font("Tahoma", Font.BOLD, 24));
        JPanel centerPanelTop = new JPanel(new FlowLayout(FlowLayout.CENTER, 0, 15));
        centerPanelTop.setOpaque(false);
        centerPanelTop.add(titleLabel);

        JPanel rightPanel = new JPanel();
        rightPanel.setOpaque(false);
        rightPanel.setPreferredSize(leftPanel.getPreferredSize());

        topPanel.add(leftPanel, BorderLayout.WEST);
        topPanel.add(centerPanelTop, BorderLayout.CENTER);
        topPanel.add(rightPanel, BorderLayout.EAST);
        add(topPanel, BorderLayout.NORTH);

        // ===== ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ã‡πâ‡∏≤‡∏¢: ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß =====
        JPanel familyPanel = createRoundedPanel("‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß");
        familyPanel.add(labelWithUnder("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏°‡∏£‡∏™ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", new JComboBox<>(new String[]{"‡πÇ‡∏™‡∏î", "‡∏™‡∏°‡∏£‡∏™", "‡∏´‡∏¢‡πà‡∏≤"})));
        familyPanel.add(labelWithUnder("‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏ö‡∏¥‡∏î‡∏≤-‡∏°‡∏≤‡∏£‡∏î‡∏≤ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", checkGroup("‡∏ö‡∏¥‡∏î‡∏≤", "‡∏°‡∏≤‡∏£‡∏î‡∏≤")));
        familyPanel.add(labelWithUnder("‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏∏‡∏û‡∏û‡∏•‡∏†‡∏≤‡∏û ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", checkGroup("‡∏ö‡∏¥‡∏î‡∏≤/‡∏°‡∏≤‡∏£‡∏î‡∏≤", "‡∏ç‡∏≤‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô ‡∏û‡∏µ‡πà, ‡∏ô‡πâ‡∏≠‡∏á ‡∏Ø‡∏•‡∏Ø)")));

        // üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡πà‡∏≠‡∏á ‚Äú‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏ï‡∏£‚Äù ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏ô‡πà‡∏ß‡∏¢ "‡∏Ñ‡∏ô"
        JPanel childPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 5, 0));
        childPanel.setOpaque(false);
        JTextField childCountField = new JTextField(5);
        JLabel unitLabel = new JLabel("‡∏Ñ‡∏ô");
        unitLabel.setFont(new Font("Tahoma", Font.PLAIN, 14));
        childPanel.add(childCountField);
        childPanel.add(unitLabel);
        familyPanel.add(labelWithUnder("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏∏‡∏ï‡∏£ ‡∏Å‡∏£‡∏≠‡∏Å", childPanel));

        // ===== ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á: ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô/‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏° =====
        JPanel fundPanel = createRoundedPanel("‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°");
        fundPanel.add(labelWithUnder("‡∏Ñ‡πà‡∏≤‡∏•‡∏î‡∏´‡∏¢‡πà‡∏≠‡∏ô‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏ä‡∏µ‡∏û (‡∏ö‡∏≤‡∏ó)", new JTextField(12)));
        fundPanel.add(labelWithUnder("‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏° (‡∏ö‡∏≤‡∏ó)", new JTextField(12)));
        fundPanel.add(labelWithUnder("‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ (‡∏ö‡∏≤‡∏ó)", new JTextField(12)));

        // ===== ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡∏ß‡∏≤: ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô/‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ =====
        JPanel insurancePanel = createRoundedPanel("‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ");
        insurancePanel.add(labelWithUnder("‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï (‡∏ö‡∏≤‡∏ó)", new JTextField(20)));
        insurancePanel.add(labelWithUnder("‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û (‡∏ö‡∏≤‡∏ó)", new JTextField(12)));
        insurancePanel.add(labelWithUnder("‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏ö‡∏≤‡∏ó)", new JTextField(12)));

        // ===== ‡∏£‡∏ß‡∏°‡∏™‡∏≤‡∏°‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á =====
        JPanel centerPanel = new JPanel(new GridLayout(1, 3, 25, 0)); // ‡πÉ‡∏ä‡πâ GridLayout ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô
        centerPanel.setOpaque(false);
        centerPanel.add(familyPanel);
        centerPanel.add(fundPanel);
        centerPanel.add(insurancePanel);

        JPanel centerWrapper = new JPanel(new GridBagLayout());
        centerWrapper.setOpaque(false);
        centerWrapper.add(centerPanel, new GridBagConstraints());
        add(centerWrapper, BorderLayout.CENTER);

        // ===== ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πà‡∏≤‡∏á =====
        JButton clearBtn = new JButton("‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        clearBtn.setFont(new Font("Tahoma", Font.BOLD, 16));
        clearBtn.setBackground(new Color(255, 200, 0));
        clearBtn.setFocusPainted(false);
        clearBtn.setBorder(new RoundedBorder(12));

        JButton calcBtn = new JButton("‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì");
        calcBtn.setFont(new Font("Tahoma", Font.BOLD, 16));
        calcBtn.setBackground(new Color(30, 60, 120));
        calcBtn.setForeground(Color.WHITE);
        calcBtn.setFocusPainted(false);
        calcBtn.setBorder(new RoundedBorder(12));

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 50, 15));
        buttonPanel.setOpaque(false);
        buttonPanel.add(clearBtn);
        buttonPanel.add(calcBtn);
        add(buttonPanel, BorderLayout.SOUTH);

        // ===== ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö =====
        backButton.addActionListener(e -> {
            this.dispose();
            new IncomeForm().setVisible(true);
        });

        setVisible(true);
    }

    // ===== ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÇ‡∏Ñ‡πâ‡∏á =====
    private JPanel createRoundedPanel(String title) {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setOpaque(true);
        panel.setBackground(Color.WHITE);
        panel.setBorder(BorderFactory.createCompoundBorder(
                new EmptyBorder(10, 10, 10, 10),
                new TitledBorder(null, title, TitledBorder.CENTER, TitledBorder.TOP,
                        new Font("Tahoma", Font.BOLD, 16))
        ));

        // üîπ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏´‡∏°‡∏î
        panel.setPreferredSize(new Dimension(320, 360));
        panel.setMinimumSize(new Dimension(320, 360));
        panel.setMaximumSize(new Dimension(320, 360));

        return panel;
    }

    // ===== Label + Component ‡πÉ‡∏ï‡πâ =====
    private JPanel labelWithUnder(String labelText, JComponent comp) {
        JPanel panel = new JPanel(new GridBagLayout());
        panel.setOpaque(false);
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.weightx = 1.0;
        gbc.insets = new Insets(5, 10, 3, 10);

        JLabel label = new JLabel("<html>" + labelText + "</html>");
        label.setFont(new Font("Tahoma", Font.PLAIN, 14));
        panel.add(label, gbc);

        gbc.gridy++;
        gbc.insets = new Insets(3, 10, 8, 10);
        panel.add(comp, gbc);

        return panel;
    }

    // ===== ‡∏Å‡∏•‡∏∏‡πà‡∏° checkbox =====
    private JPanel checkGroup(String... names) {
        JPanel group = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 0));
        group.setOpaque(false);
        for (String n : names) group.add(new JCheckBox(n));
        return group;
    }

    // ===== ‡∏Ç‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏á‡∏õ‡∏∏‡πà‡∏° =====
    private static class RoundedBorder extends AbstractBorder {
        private int radius;
        RoundedBorder(int r) { radius = r; }
        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            Graphics2D g2 = (Graphics2D) g;
            g2.setColor(Color.GRAY);
            g2.setStroke(new BasicStroke(2));
            g2.drawRoundRect(x, y, width - 1, height - 1, radius, radius);
        }
    }
}
